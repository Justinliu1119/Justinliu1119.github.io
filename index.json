[{"authors":["author"],"categories":null,"content":"I am an undergraduate senior at the University of Southern California, pursuing dual degrees in Electrical Engineering and Applied and Computational Mathematics. My research interests lie at the intersection of Machine Learning, Online Linear Programming, and Inference, where I’m passionate about developing new approaches to optimization and predictive modeling. I’ve been fortunate to be advised by Prof. Yinyu Ye from Stanford University and Prof. Peter Beerel from USC, whose mentorship has profoundly shaped my academic and research journey.\n","date":-62135596800,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":-62135596800,"objectID":"0130dff4234ceaca9e707a941f1ba38e","permalink":"https://justinliu1119.github.io/authors/authors/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/authors/","section":"authors","summary":"I am an undergraduate senior at the University of Southern California, pursuing dual degrees in Electrical Engineering and Applied and Computational Mathematics. My research interests lie at the intersection of Machine Learning, Online Linear Programming, and Inference, where I’m passionate about developing new approaches to optimization and predictive modeling. I’ve been fortunate to be advised by Prof. Yinyu Ye from Stanford University and Prof. Peter Beerel from USC, whose mentorship has profoundly shaped my academic and research journey.\n","tags":null,"title":"YAO (Justin) LIU","type":"authors"},{"authors":null,"categories":null,"content":"","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"0a1dba2c018da9739261513564b54760","permalink":"https://justinliu1119.github.io/authors/authors/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/authors/authors/","section":"authors","summary":"","tags":null,"title":null,"type":"authors"},{"authors":null,"categories":null,"content":"\nI designed a band pass filter that filters specifically the guitar G chord which is around 196Hz. The circuit functions as a device to filter the frequencies that were converted by the pickup for the guitar. The guitar filter detects the magnetic field when one plucks the strings, it then converts the magnetic field to signals that go into the RC bandpass circuit, the circuit then amplifies the signal and feeds it into the speaker.\nWe chose the resistors for R1 and R2 to be 1 kilo-ohms and C1 was chosen to have a capacitance of 1 microFarad and C2 was 680 nanoFarad. Next, we added a noninverting amplifier to our circuit amplifying the signal input of the pickup by a scale of 11 by using the feedback resistor of 10k ohms where R1 was chosen to be 1 kilo-ohm.\nThis project demonstrates the conversion of a signal into a magnetic field, which in turn produced amplified acoustic sound via the speaker. The bandpass filter we designed efficiently selected and outputted the signal within the intended frequency range.\nThe output signal shown above matched our expected result. The signal clearly shows a frequency of 196-–196+ being selected to be the output.\nOur experiment showcased the conversion of a signal into a magnetic field, which in turn produced amplified acoustic sound via the speaker. The bandpass filter we designed efficiently selected and outputted the signal within the intended frequency range. Furthermore, we successfully applied op-amp analysis concepts learned in class to amplify the input signal originating from the pickup.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"b51904bc46d59de2fef1261df6253348","permalink":"https://justinliu1119.github.io/projects/electric-guitar/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/projects/electric-guitar/","section":"projects","summary":"\nI designed a band pass filter that filters specifically the guitar G chord which is around 196Hz. The circuit functions as a device to filter the frequencies that were converted by the pickup for the guitar. The guitar filter detects the magnetic field when one plucks the strings, it then converts the magnetic field to signals that go into the RC bandpass circuit, the circuit then amplifies the signal and feeds it into the speaker.\n","tags":null,"title":"Electric Guitar","type":"projects"},{"authors":null,"categories":null,"content":" Our design of the Fridgehub consisted of key modules: a local fridge-embedded device governed by the Atmega328, a Raspberry Pi as a liaison between the main device and the database, and a mobile app. The proposed methodologies employ a combination of components such as a barcode scanner, LCD display, temperature sensor, keypad, and Raspberry Pi with the Atmega328p at its core. Along with a cloud storage database (Firebase) and a mobile app, we empower multimedia management of the fridge inventory. Through the hardware implementation, the Atmega328p retrieves the barcode number from the scanning mechanism. Subsequently, our local software interprets the message and matches the universal barcode number with its specific product counterpart. The keypad can then be used by the user to enter the expiration date of the product in the year/month/day format. We also designate the keypad for the user to navigate through the list of menus in the inventory system that includes product name \u0026 quantity, expiration date, and storage method. From a safety perspective, the temperature sensor records real-time temperature and alerts the user via flickering the green LEDs if the temperature exceeds a set threshold. All the information discussed above is illustrated to the user via our LCD display. Database Inventory\nAfter all, the information stored locally will be sent to the Raspberry Pi from the Atmega328p via SPI(Serial Peripheral Interface). Our FridgeHub features a user-friendly grocery management app developed with SwiftUI, optimizing inventory management. Connected to Firebase's real-time database, it ensures that all household members have instant access to synchronized grocery data. The app's architecture follows the MVVM (Model-View-ViewModel) design pattern. The ViewModel interacts with Firebase for data operations, fetching, and storing, while the View layer handles user interactions and data presentation. Along with the APP, we hope our product can provide the smart home device community with a comprehensive sustainability and safety standpoint to explore the usage of Fridgehub for the betterment of the environment. ","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"9b9d2a1b695ca43899ff43ca8a18c994","permalink":"https://justinliu1119.github.io/projects/fridge-hub/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/projects/fridge-hub/","section":"projects","summary":" Our design of the Fridgehub consisted of key modules: a local fridge-embedded device governed by the Atmega328, a Raspberry Pi as a liaison between the main device and the database, and a mobile app. The proposed methodologies employ a combination of components such as a barcode scanner, LCD display, temperature sensor, keypad, and Raspberry Pi with the Atmega328p at its core. Along with a cloud storage database (Firebase) and a mobile app, we empower multimedia management of the fridge inventory. Through the hardware implementation, the Atmega328p retrieves the barcode number from the scanning mechanism. Subsequently, our local software interprets the message and matches the universal barcode number with its specific product counterpart. The keypad can then be used by the user to enter the expiration date of the product in the year/month/day format. We also designate the keypad for the user to navigate through the list of menus in the inventory system that includes product name \u0026 quantity, expiration date, and storage method. From a safety perspective, the temperature sensor records real-time temperature and alerts the user via flickering the green LEDs if the temperature exceeds a set threshold. All the information discussed above is illustrated to the user via our LCD display. Database Inventory\n","tags":null,"title":"Fridge-Hub","type":"projects"},{"authors":null,"categories":null,"content":"\nSpeed Trap\nThe speed trap measures how fast an object is moving as it passes two sensors and display the speed on a dial-type indicator. It also relays that speed to a remote device.\nThe speed in cm/sec is shown on the LCD display and also on an indicator dial similar to an analog speedometer used on many cars where a pointer rotates to point to the speed. A block diagram of the speed trap is shown on the right and it has the following features:\nTwo LED light sources, and two phototransistors light detectors for determining the time it takes for an object to go from the first sensor to the second sensor.\nAn LED to indicate that a speed measurement is in progress.\nAn LCD display for showing the measured time to pass the sensors in msec and the speed in cm/sec. The display is also used for setting a speed threshold and displaying the speed received from the remote device.\nA dial-type speedometer display for indicating the speed.\nA knob for selecting a speed threshold.\nA buzzer for playing an alarm tone.\nA serial interface (RS-232) to another speed trap unit. When the local unit measures a speed it sends it to the remote unit. When a speed is received from the remote unit it is displayed on the LCD.\nTwo LEDs for comparing the speed measured on the local device with a speed received from the remote unit.\nThe two detectors are made from two white LEDs and two phototransistors. The LEDs and phototransistors are positioned so the light from the LED is illuminating the phototransistor unless some object blocks the path as shown below. The LEDs don\u0026rsquo;t have to be controlled by the Arduino and can be wired to be on all the time. The phototransistors should each be connected to a digital input port bit and monitored using the pin change interrupts similar to how you handle the rotary encoder inputs. When the phototransistor can \u0026ldquo;see\u0026rdquo; the light from the LED the digital input will be a one. When an object blocks the light path, the input will go to a zero.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"515667c0412fa742c39e9c8e9b3d4662","permalink":"https://justinliu1119.github.io/projects/speed-trap/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/projects/speed-trap/","section":"projects","summary":"\nSpeed Trap\nThe speed trap measures how fast an object is moving as it passes two sensors and display the speed on a dial-type indicator. It also relays that speed to a remote device.\nThe speed in cm/sec is shown on the LCD display and also on an indicator dial similar to an analog speedometer used on many cars where a pointer rotates to point to the speed. A block diagram of the speed trap is shown on the right and it has the following features:\n","tags":null,"title":"Speed Trap","type":"projects"},{"authors":null,"categories":null,"content":"\nWe construct a novel submersible safety assurance system for addressing safety concerns during underwater sightseeing tours of submersibles in the Ionian Sea. Our system incorporates multiple mathematical models and employs methods such as TDOA (Time Difference of Arrival) localization and Kalman filtering to enhance real-time and accurate prediction of the submersible movements, and to improve the success rate of search operations in case of unexpected loss of contact.\nFor locating the submersible, due to factors like observation noise, simple localization methods often yield significant errors in estimating the actual submersible position. Hence, we established a localization model based on acoustic signals transmitted from multiple known buoys and anchor points to continuously obtain real- time observed positions of the submersible through TDOA localization. Then, leveraging the localization model, we created a prediction model based on the Kalman filtering algorithm to optimally predict the submersible position, thereby achieving more precise prediction.\nTDOA Localization Model\nTaking advantage of the limited propagation speed of sound in water and the existence of acoustic signal transmitters and receivers, oue team deployed four surface buoys with known positions. The measured position of our submersible in this section plays an important role in the subsequent model in which we used Kalman Filtering to estimate the navigation behavior of the submarine. To achieve clock synchronization and ensure accurate positioning of the submarine, we added the fifth receiver placed at the bottom of the ocean as the clock for synchronization reference. In the submersible acoustic positioning, we use TDOA under the condition of equal sound velocity profile to simulate the position of the submersible position. Each buoy is equipped with an acoustic signal receiver for the signal emitted by the submarine transmitter every t-second.\nThe setup for the experiment of localization through TDOA and the generated simulation result is shown in to figures on the right.\nNote: We run the simulation of TDOA based on the following instantiations:The coordinates to be stations are set to[−800 − 200 3], [−200 − 800 0], [−800 − 1000 0], [0 0 0], [−500 − 500 − 500]. We uniformly place a total of 1000 test points which represent predetermined coordinates of the submarines in space starting from coordinates [100 − 100 − 50], with intervals of 60 𝑚 along the x-axis, 60 𝑚 along the y-axis, and 30 𝑚 along the z-axis.\nEstimation of Location via Kalman Filter\nTo implement the Kalman filtering algorithm, it is necessary to obtain the state transition equation of the object. Using this equation and the object\u0026rsquo;s posterior estimated value at time t, as well as the assumed noise influence, the object\u0026rsquo;s prior estimated value at time t+1, or the prediction result, is calculated. In this instance, the state transition equation of the Kalman filtering algorithm is derived based on the data sent from the submersible to the host ship at time t, including the submersible motion velocity and acceleration in all directions at time t, as well as the ocean current acceleration in all directions. This is combined with the optimal estimated position coordinates obtained through the Kalman filtering algorithm at time t and the assumed noise, to infer the submersible position coordinates at time t+1.\nIn addition to the state transition equation, the implementation of the Kalman filtering algorithm also requires a measurement equation, obtained from actual observation data and the assumed noise influence to derive the observed state. In this example, the observation equation of the Kalman filtering algorithm is based on the positioning results obtained from the location model and the assumed noise addition. The location model, as previously mentioned, calculates the submersible position coordinates by receiving acoustic signals from buoys.\nAfter obtaining the state transition equation and the observation equation, the posterior estimate of the object at time t, derived through the Kalman filtering algorithm, can be computed. Firstly, the Kalman coefficients of the object at time t are calculated based on existing data, resulting in intermediate results of the filtering calculation. Finally, the posterior or optimal estimate of the object at time t is calculated as the sum of the object\u0026rsquo;s prior estimate at time t and the product of the Kalman coefficient multiplied by the difference between the object\u0026rsquo;s observation value at time t and the object\u0026rsquo;s prior estimate value at time t.\n","date":-62135596800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":-62135596800,"objectID":"759b72139aa1fb7e54f74c92f227ad25","permalink":"https://justinliu1119.github.io/projects/tdoa-and-kalman-filtering-models-in-submarine/","publishdate":"0001-01-01T00:00:00Z","relpermalink":"/projects/tdoa-and-kalman-filtering-models-in-submarine/","section":"projects","summary":"\nWe construct a novel submersible safety assurance system for addressing safety concerns during underwater sightseeing tours of submersibles in the Ionian Sea. Our system incorporates multiple mathematical models and employs methods such as TDOA (Time Difference of Arrival) localization and Kalman filtering to enhance real-time and accurate prediction of the submersible movements, and to improve the success rate of search operations in case of unexpected loss of contact.\nFor locating the submersible, due to factors like observation noise, simple localization methods often yield significant errors in estimating the actual submersible position. Hence, we established a localization model based on acoustic signals transmitted from multiple known buoys and anchor points to continuously obtain real- time observed positions of the submersible through TDOA localization. Then, leveraging the localization model, we created a prediction model based on the Kalman filtering algorithm to optimally predict the submersible position, thereby achieving more precise prediction.\n","tags":null,"title":"Speed Trap","type":"projects"}]